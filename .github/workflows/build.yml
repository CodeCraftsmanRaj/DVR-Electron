name: Build and Release

on:
  push:
    branches: ["main"]
    tags:
      - "v*"

jobs:
  build_and_release:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    # Permissions are required for electron-builder to create a GitHub Release
    permissions:
      contents: write

    env:
      # This token is used by electron-builder to publish the release
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r dvr-scan-py/requirements.txt
        shell: bash

      - name: ⚙️ Build Python Engine (Windows)
        if: runner.os == 'Windows'
        working-directory: ./dvr-scan-py
        run: pyinstaller --noconfirm dvr-scan-engine.spec
        shell: bash

      - name: ⚙️ Build Python Engine (macOS & Linux)
        if: runner.os != 'Windows'
        working-directory: ./dvr-scan-py
        run: |
          pyinstaller --noconfirm dvr-scan-engine.spec
          chmod +x dist/dvr-scan-engine
        shell: bash

      - name: 🟢 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: 📦 Install Node dependencies
        run: npm install
        shell: bash

      # --- CORRECTED BUILD STEP ---
      # This step is now split by OS to pass the correct build flags.
      # This is crucial for creating a universal macOS binary.
      - name: 🚀 Build and Publish Electron App (Windows)
        if: runner.os == 'Windows'
        run: npm run build -- --win --x64
        shell: bash

      - name: 🚀 Build and Publish Electron App (macOS)
        if: runner.os == 'macOS'
        run: npm run build -- --mac --universal
        shell: bash

      - name: 🚀 Build and Publish Electron App (Linux)
        if: runner.os == 'Linux'
        run: npm run build -- --linux --x64
        shell: bash
